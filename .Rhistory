install.packages(c("dismo", "dplyr", "lme4", "maps", "maptools", "pals", "raster", "rgdal", "tidyr", "viridis"))
library(raster)
library(maptools)
data(wrld_simpl)
library(raster)
library(dplyr)
library(rgdal)
library(dismo)
library(maps)
data(worldMapEnv)
library(viridis)
library(ggplot2)
library(tidyr)
library(lme4)
library(pals)
################ downsample enm layer resolution to match earthstat
enm <- raster('/Users/emilywork/Downloads/all.CLY250.tif')
enm <- aggregate(enm, fact=10)
################ read in the production maps from earthstat
sorg <- raster('/Users/emilywork/Desktop/EarthStat/sorghum_HarvAreaYield_Geotiff/sorghum_HarvestedAreaHectares.tif')
sorg <- crop(sorg, enm)
getwd()
################ read in the production maps from earthstat
sorg <- raster('/Users/emilywork/Desktop/EarthStat/sorghum_HarvAreaYield_Geotiff/sorghum_HarvestedAreaHectares.tif')
################ read in the production maps from earthstat
sorg <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/sorghum_HarvAreaYield_Geotiff/sorghum_HarvestedAreaHectares.tif')
sorg.yld <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/sorghum_HarvAreaYield_Geotiff/sorghum_YieldPerHectare.tif'))
sorg.yld <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/sorghum_HarvAreaYield_Geotiff/sorghum_YieldPerHectare.tif')
plot(sorg.yld)
sorg.yld <- crop(sorg.yld, enm)
plot(sorg.yld)
mill <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/millet_HarvAreaYield_Geotiff/millet_HarvestedAreaHectares.tif')
mill <- crop(mill, enm)
mill.yld <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/millet_HarvAreaYield_Geotiff/millet_YieldPerHectare.tif')
mill.yld <- crop(mill.yld, enm)
plot(mill.yld)
maiz.yld <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/maize_HarvAreaYield_Geotiff/maize_YieldPerHectare.tif')
maiz.yld <- crop(maiz.yld, enm)
plot(maiz.yld)
############### create mask based on habitat suitability of all occurrence model and distance from striga hermonthica
core <- calc(enm, fun=function(x){ x[x < 0.1] <- NA; return(x)} )
shgeo <- read.csv('/Users/emilywork/Downloads/pnas.1908707117.sd03.csv', header=T)
coordinates(shgeo) <- ~lon+lat
projection(shgeo) <- CRS('+proj=longlat +datum=WGS84')
x <- circles(shgeo, d=200000, lonlat=T) #sample within radius of 200km
pol <- polygons(x)
all_within <- mask(core, pol)
x <- circles(shgeo, d=200000, lonlat=T)
install.packages('rgeos')
library(rgeos)
shgeo <- read.csv('/Users/emilywork/Downloads/pnas.1908707117.sd03.csv', header=T)
coordinates(shgeo) <- ~lon+lat
projection(shgeo) <- CRS('+proj=longlat +datum=WGS84')
x <- circles(shgeo, d=200000, lonlat=T) #sample within radius of 200km
pol <- polygons(x)
all_within <- mask(core, pol)
maiz <- maiz.yld
mill <- mill.yld
sorg <- sorg.yld
f.sorg <- sorg/(sorg+mill+maiz)
f.mill <- mill/(sorg+mill+maiz)
f.maiz <- maiz/(sorg+mill+maiz)
dom.s <- overlay(f.sorg, f.mill, f.maiz, fun=Vectorize(function(x,y,z){ifelse(x>=y && x>=z,1,NA)}))
dom.m <- overlay(f.sorg, f.mill, f.maiz, fun=Vectorize(function(x,y,z){ifelse(y>x && y>=z,2,NA)}))
dom.z <- overlay(f.sorg, f.mill, f.maiz, fun=Vectorize(function(x,y,z){ifelse(z>x && z>y,3,NA)}))
dom <- cover(dom.s, dom.m)
dom <- cover(dom, dom.z)
dom <- setExtent(dom, core)
dom <- mask(dom, all_within)
dom.s <- setExtent(dom.s, all_within); dom.s <- mask(dom.s, all_within); cellStats(area(dom.s, na.rm=TRUE), sum)
dom.m <- setExtent(dom.m, all_within); dom.m <- mask(dom.m, all_within); cellStats(area(dom.m, na.rm=TRUE), sum)
dom.z <- setExtent(dom.z, all_within); dom.z <- mask(dom.z, all_within); cellStats(area(dom.z, na.rm=TRUE), sum)
plot(dom2, col=c('sienna3','plum','gold2'),legend=F, xaxt='n', yaxt='n')
dom.s
plot(dom.s)
plot(dom.m)
plot(dom.z)
dom.z
plot(dom)
plot(dom, col=c('sienna3','plum','gold2'),legend=F, xaxt='n', yaxt='n')
map(database="world", xlim=c(-20,60),ylim=c(-40,45),add=T, col="grey40", lwd=0.5, mar=NA)
points(cbind(unique(meta$lon),unique(meta$lat)), pch=17, cex=0.4)
plot(dom, col=c('sienna3','plum','gold2'),legend=F, xaxt='n', yaxt='n')
legend(-18,-15, legend=c("sorghum","millet","maize"), fill=c('sienna3','plum','gold2'), box.col=NA, cex=0.5)
map(database="world", xlim=c(-20,60),ylim=c(-40,45),add=T, col="grey40", lwd=0.5, mar=NA)
points(cbind(unique(meta$lon),unique(meta$lat)), pch=17, cex=0.4)
meta <- read.csv('SI.dat.1.30.20.csv')
meta <- subset(meta, emergence != "NA") # 27 localities
points(cbind(unique(meta$lon),unique(meta$lat)), pch=17, cex=0.4)
all.yld <- maiz.yld + mill.yld + sorg.yld
plot(all.yld)
plot(all.yld, ylim=c(-35, 20))
head(meta)
meta <- subset(meta, emergence != "NA") # 27 localities
head(meta)
as.data.frame(meta %>% filter(host=="sorghum") %>% group_by(locality) %>% summarize(Emg = mean(emergence), lat = mean(lat), lon=mean(lon),ENM = mean(ENM_a_s50km)))
as.data.frame(meta %>% group_by(locality, host) %>% summarize(Emg = mean(emergence), lat = mean(lat), lon=mean(lon),ENM = mean(ENM_a_s50km)))
as.data.frame(meta %>% group_by(locality, host) %>% summarize(Emg = mean(emergence), lat = mean(lat), lon=mean(lon)))
tmp <- meta %>% select(locality, emergence, host) %>% group_by(locality, host) %>% summarize(emg = mean(emergence), sd = sd(emergence), n=length(emergence))
tmp2 <- tmp %>% group_by(locality) %>% summarize(total=sum(emg))
tmp3 <- inner_join(tmp, tmp2)
ggplot(tmp3, aes(x=reorder(locality,-total), y=emg, col=host, fill=host)) + geom_bar(position="stack", stat="identity", alpha=0.4) +theme_minimal()+ scale_colour_manual(values=c('gold2','plum','sienna3')) + scale_fill_manual(values=c('gold2','plum','sienna3'))+ theme(axis.text.x=element_text(angle=90, vjust=0.2, hjust=1)) + ylab("Relative emergence") + xlab("Locality") + geom_errorbar()
tmp3
ggplot(tmp3, aes(x=reorder(locality,-total), y=emg, col=host, fill=host)) + geom_bar(position="stack", stat="identity", alpha=0.4) +theme_minimal()+ scale_colour_manual(values=c('gold2','plum','sienna3')) + scale_fill_manual(values=c('gold2','plum','sienna3'))+ theme(axis.text.x=element_text(angle=90, vjust=0.2, hjust=1)) + ylab("Relative emergence") + xlab("Locality")
all.yld <- maiz.yld + mill.yld + sorg.yld
all.yld <- maiz.yld + mill.yld + sorg.yld
as.data.frame(meta %>% filter(host=="sorghum") %>% group_by(locality) %>% summarize(Emg = mean(emergence), lat = mean(lat), lon=mean(lon),ENM = mean(ENM_a_s50km)))
as.data.frame(meta %>% filter(host=="sorghum") %>% group_by(locality) %>% summarize(Emg = mean(emergence), lat = mean(lat), lon=mean(lon)))
as.data.frame(meta %>% filter(host=="sorghum") %>% group_by(locality, host) %>% summarize(Emg = mean(emergence), lat = mean(lat), lon=mean(lon)))
as.data.frame(meta  %>% group_by(locality, host) %>% summarize(Emg = mean(emergence), lat = mean(lat), lon=mean(lon)))
extract(all.yld, cbind(tmp$lon, tmp$lat))
raster::extract(all.yld, cbind(tmp$lon, tmp$lat))
raster::extract(all.yld, cbind.data.frame(tmp$lon, tmp$lat))
cbind.data.frame(tmp$lon, tmp$lat)
tmp
tmp <- as.data.frame(meta  %>% group_by(locality, host) %>% summarize(Emg = mean(emergence), lat = mean(lat), lon=mean(lon)))
tmp
raster::extract(all.yld, cbind.data.frame(tmp$lon, tmp$lat))
tmp$total_yield <- raster::extract(all.yld, cbind.data.frame(tmp$lon, tmp$lat))
tmp
tmp %>% pivot_wider()
tmp %>% pivot_wider(~host)
?pivot_wider
tmp %>% pivot_wider(names_from = host)
tmp %>% pivot_wider(names_from = host, values_from = host)
tmp %>% pivot_wider(names_from = host, values_from = Emg)
tmp <- tmp %>% pivot_wider(names_from = host, values_from = Emg)
tmp[5:7]
max(tmp[5:7])
tmp[1,5:7]
sort(tmp[1,5:7])
sort(tmp[1,5:7], partial=2)
sort(tmp[1,5:7], partial=2)[2]
sort(tmp[2,5:7], partial=2)[2]
max(tmp[2,5:7])
tmp$ratio <- NULL
tmp
tmp <- as.data.frame(tmp)
tmp$ratio <- NULL
tmp <- as.data.frame(tmp)
tmp
tmp$ratio
for (i in 1:nrow(tmp)) {
sec_highest <- sort(tmp[i,5:7], partial=2)[2]
max <- max(tmp[i,5:7])
tmp$ratio[i] <- max/sec_highest
}
tmp
tmp$ratio[16]
tmp$ratio[16] <- 1/0.5
tmp$ratio[16]
tmp$ratio[22] <- 1/0.25
tmp$ratio[23] <- NA
tmp
ggplot(tmp, aes(x=total_yield, y=ratio)) + geom_point()
class(tmp$total_yield)
class(tmp$ratio)
tmp$ratio <- as.numeric(tmp$ratio)
class(tmp$ratio)
tmp
ggplot(tmp, aes(x=total_yield, y=ratio)) + geom_point()
plot(mill.yld)
plot(maiz.yld)
plot(sorg.yld)
plot(all.yld)
plot(mill.yld)
map(database="world", xlim=c(-20,60),ylim=c(-40,45),add=T, col="grey40", lwd=0.5, mar=NA)
###### productivity vs. habitat suitability at locations of striga occurrences?
plot(enm)
enm
head(shgeo)
###### productivity vs. habitat suitability at locations of striga occurrences?
extract(enm, shgeo)
###### productivity vs. habitat suitability at locations of striga occurrences?
raster::extract(enm, shgeo)
###### productivity vs. habitat suitability at locations of striga occurrences?
df <- NULL
df$HS <- raster::extract(enm, shgeo)
df$productivity <- raster::extract(all.yld, shgeo)
head(df)
head(df)
ggplot(df, aes(x=productivity, y=HS)) + geom_point()
df <- cbind.data.frame(df$HS, df$productivity)
head(df)
colnames(df) <- c("HS","Productivity")
ggplot(df, aes(x=Productivity, y=HS)) + geom_point()
ggplot(df, aes(x=Productivity, y=HS)) + geom_point(alpha=0.5
ggplot(df, aes(x=Productivity, y=HS)) + geom_point(alpha=0.5
)
ggplot(df, aes(x=Productivity, y=HS)) + geom_point(alpha=0.5)
ggplot(df, aes(x=Productivity, y=HS^2)) + geom_point(alpha=0.5)
ggplot(df, aes(x=Productivity, y=HS)) + geom_point(alpha=0.5)
ggplot(df, aes(x=Productivity, y=HS)) + geom_point(alpha=0.5, size=3)
ggplot(df, aes(x=Productivity, y=HS)) + geom_point(alpha=0.5, size=2)
ggplot(df, aes(x=Productivity, y=HS)) + geom_point(alpha=0.5, size=2)+xlim(c(0,8))
ggplot(df, aes(x=Productivity, y=HS)) + geom_point(alpha=0.5, size=2)+xlim(c(0,7))
ggplot(df, aes(x=Productivity, y=HS)) + geom_point(alpha=0.5, size=2)+xlim(c(0,7)) + geom_smooth()
df$productivity <- raster::extract(sorg, shgeo)
ggplot(df, aes(x=Productivity, y=HS)) + geom_point(alpha=0.5, size=2)+xlim(c(0,7))
ggplot(df, aes(x=Productivity, y=HS)) + geom_point(alpha=0.5, size=2)+xlim(c(0,7))+Geom_smooth()
ggplot(df, aes(x=Productivity, y=HS)) + geom_point(alpha=0.5, size=2)+xlim(c(0,7))+geom_smooth()
df <- NULL
df$HS <- raster::extract(enm, shgeo)
df$productivity <- raster::extract(sorg, shgeo)
df <- cbind.data.frame(df$HS, df$productivity)
colnames(df) <- c("HS","Productivity")
ggplot(df, aes(x=Productivity, y=HS)) + geom_point(alpha=0.5, size=2)+xlim(c(0,7))+geom_smooth()
ggplot(df, aes(x=Productivity, y=HS)) + geom_point(alpha=0.5, size=2)+xlim(c(0,7))+geom_smooth()
df$HS <- raster::extract(enm, shgeo)
df$productivity <- raster::extract(mill, shgeo)
df <- cbind.data.frame(df$HS, df$productivity)
colnames(df) <- c("HS","Productivity")
ggplot(df, aes(x=Productivity, y=HS)) + geom_point(alpha=0.5, size=2)+xlim(c(0,7))+geom_smooth()
df <- NULL
df$HS <- raster::extract(enm, shgeo)
df$productivity <- raster::extract(all.yld, shgeo)
df <- cbind.data.frame(df$HS, df$productivity)
colnames(df) <- c("HS","Productivity")
df$sorg <- raster::extract(sorg, shgeo)
head(df)
df$sorg <- raster::extract(sorg, shgeo)
df$mill <- raster::extract(mill, shgeo)
df$maize <- raster::extract(maiz, shgeo)
df %>% pivot_wider()
df %>% pivot_wider(id_cols = HS)
df %>% pivot_wider(from_cols = sorg, mill, maize)
?pivot_wider
df %>% pivot_longr(names_from = sorg, mill, maize)
df %>% pivot_longer(names_from = sorg, mill, maize)
df %>% pivot_longer()
df %>% pivot_longer(cols)
?pivot_longer
df %>% pivot_longer(cols = sorg, mill, maize)
df %>% pivot_longer(cols = sorg, mill, maize)
df %>% pivot_longer(cols = c(sorg, mill, maize))
df %>% pivot_longer(cols = c(Productivity, sorg, mill, maize))
df2 <- df %>% pivot_longer(cols = c(Productivity, sorg, mill, maize))
?pivot_longer
ggplot(df2, aes(x=value, y=HS, col=name)) + geom_point(alpha=0.5, size=2)+xlim(c(0,7))+geom_smooth()
df2 <- df %>% pivot_longer(cols = c(sorg, mill, maize))
ggplot(df2, aes(x=value, y=HS, col=name)) + geom_point(alpha=0.5, size=2)+xlim(c(0,7))+geom_smooth()
enm.s <- raster('/Users/emilywork/Downloads/sorg.CLY250.tif')
enm.m <- raster('/Users/emilywork/Downloads/mill.CLY250.tif')
enm.z <- raster('/Users/emilywork/Downloads/maiz.CLY250.tif')
################ read in the production maps from earthstat
sorg <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/sorghum_HarvAreaYield_Geotiff/sorghum_HarvestedAreaHectares.tif')
sorg <- crop(sorg, enm)
################ read in the production maps from earthstat
sorg <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/sorghum_HarvAreaYield_Geotiff/sorghum_HarvestedAreaHectares.tif')
sorg.yld <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/sorghum_HarvAreaYield_Geotiff/sorghum_YieldPerHectare.tif')
sorg <- crop(sorg, enm)
sorg.yld <- crop(sorg.yld, enm)
mill <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/millet_HarvAreaYield_Geotiff/millet_HarvestedAreaHectares.tif')
mill.yld <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/millet_HarvAreaYield_Geotiff/millet_YieldPerHectare.tif')
mill <- crop(mill, enm)
mill.yld <- crop(mill.yld, enm)
maiz <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/maize_HarvAreaYield_Geotiff/maize_HarvestedAreaHectares.tif')
maiz.yld <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/maize_HarvAreaYield_Geotiff/maize_YieldPerHectare.tif')
maiz <- crop(maiz, enm)
maiz.yld <- crop(maiz.yld, enm)
df <- NULL
df$HS <- raster::extract(enm, shgeo)
df$productivity <- raster::extract(all.yld, shgeo)
df <- cbind.data.frame(df$HS, df$productivity)
colnames(df) <- c("HS","Productivity")
df$sorg <- raster::extract(sorg, shgeo)
df$mill <- raster::extract(mill, shgeo)
df$maize <- raster::extract(maiz, shgeo)
df2 <- df %>% pivot_longer(cols = c(sorg, mill, maize))
ggplot(df2, aes(x=value, y=HS, col=name)) + geom_point(alpha=0.5, size=2)+xlim(c(0,7))+geom_smooth()
sorg <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/sorghum_HarvAreaYield_Geotiff/sorghum_HarvestedAreaHectares.tif')
sorg.yld <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/sorghum_HarvAreaYield_Geotiff/sorghum_YieldPerHectare.tif')
sorg <- crop(sorg, enm)
sorg.yld <- crop(sorg.yld, enm)
mill <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/millet_HarvAreaYield_Geotiff/millet_HarvestedAreaHectares.tif')
mill.yld <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/millet_HarvAreaYield_Geotiff/millet_YieldPerHectare.tif')
mill <- crop(mill, enm)
mill.yld <- crop(mill.yld, enm)
maiz <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/maize_HarvAreaYield_Geotiff/maize_HarvestedAreaHectares.tif')
maiz.yld <- raster('/Users/emilywork/Desktop/StrigaMacroecology/EarthStat/maize_HarvAreaYield_Geotiff/maize_YieldPerHectare.tif')
maiz <- crop(maiz, enm)
maiz.yld <- crop(maiz.yld, enm)
df <- NULL
df$HS <- raster::extract(enm, shgeo)
df$productivity <- raster::extract(all.yld, shgeo)
df <- cbind.data.frame(df$HS, df$productivity)
colnames(df) <- c("HS","Productivity")
df$sorg <- raster::extract(sorg, shgeo)
df$mill <- raster::extract(mill, shgeo)
df$maize <- raster::extract(maiz, shgeo)
df2 <- df %>% pivot_longer(cols = c(sorg, mill, maize))
ggplot(df2, aes(x=value, y=HS, col=name)) + geom_point(alpha=0.5, size=2)+xlim(c(0,7))+geom_smooth()
###### productivity vs. habitat suitability at locations of striga occurrences?
sorg <- sorg.yld
sorg <- sorg.yld
maiz <- maiz.yld
mill <- mill.yld
df <- NULL
df$HS <- raster::extract(enm, shgeo)
df$productivity <- raster::extract(all.yld, shgeo)
df <- cbind.data.frame(df$HS, df$productivity)
colnames(df) <- c("HS","Productivity")
df$sorg <- raster::extract(sorg, shgeo)
df$mill <- raster::extract(mill, shgeo)
df$maize <- raster::extract(maiz, shgeo)
df2 <- df %>% pivot_longer(cols = c(sorg, mill, maize))
df <- NULL
df$HS <- raster::extract(enm, shgeo)
df$productivity <- raster::extract(all.yld, shgeo)
df <- cbind.data.frame(df$HS, df$productivity)
colnames(df) <- c("HS","Productivity")
df$sorg <- raster::extract(sorg, shgeo)
df$mill <- raster::extract(mill, shgeo)
df$maize <- raster::extract(maiz, shgeo)
df2 <- df %>% pivot_longer(cols = c(sorg, mill, maize))
ggplot(df2, aes(x=value, y=HS, col=name)) + geom_point(alpha=0.5, size=2)+xlim(c(0,7))+geom_smooth()
ggplot(df2, aes(x=value, y=HS, col=name)) + geom_point(alpha=0.5, size=2)+xlim(c(0,4))+geom_smooth()
ggplot(df2, aes(y=value, x=HS, col=name)) + geom_point(alpha=0.5, size=2)+xlim(c(0,4))+geom_smooth()
ggplot(df2, aes(y=value, x=HS, col=name)) + geom_point(alpha=0.5, size=2)+geom_smooth()
data("iris")
nrow(iris)
ncol(iris)
types <- rep(data.frame(
colName = c(),
valueType = c()
), ncol(iris))
for(i in 1:ncol(iris)) {
types <- rbind(types, data.frame(
colName = c(colnames(iris)[i]),
valueType=c(class(iris[,i]))
))
}
range <- rep(data.frame(
colName = c(),
low = c(),
high = c()
), ncol(iris))
or(i in 1:ncol(iris)) {
if(class(iris[,i]) == "numeric"){
range <- rbind(range, data.frame(
colName = c(colnames(iris)[i]),
low = c(range(iris[colnames(iris)[i]])[1]),
high = c(range(iris[colnames(iris)[i]])[2])
))
}
}
for(i in 1:ncol(iris)) {
if(class(iris[,i]) == "numeric"){
range <- rbind(range, data.frame(
colName = c(colnames(iris)[i]),
low = c(range(iris[colnames(iris)[i]])[1]),
high = c(range(iris[colnames(iris)[i]])[2])
))
}
}
meanAndSD <- rep(data.frame(
colName = c(),
mean = c(),
SD = c()
), ncol(iris))
for(i in 1:ncol(iris)) {
if(class(iris[,i]) == "numeric"){
meanAndSD <- rbind(meanAndSD, data.frame(
colName = c(colnames(iris)[i]),
mean = c(mean(as.numeric(unlist(iris[colnames(iris)[i]])))),
SD = c(sd(as.numeric(unlist(iris[colnames(iris)[i]]))))
))
}
}
meanAndSDSubset <- rep(data.frame(
colName = c(),
mean = c(),
SD = c()
), ncol(iris))
for(i in 1:ncol(iris)) {
if(class(iris[,i]) == "numeric"){
meanAndSDSubset <- rbind(meanAndSDSubset, data.frame(
colName = c(colnames(subset(iris, Species != 'setosa'))[i]),
mean = c(mean(as.numeric(unlist(subset(iris, Species != 'setosa')[colnames(subset(iris, Species != 'setosa'))[i]])))),
SD = c(sd(as.numeric(unlist(subset(iris, Species != 'setosa')[colnames(subset(iris, Species != 'setosa'))[i]]))))
))
}
}
